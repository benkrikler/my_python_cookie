[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.project_slug }}"
description = ''
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
  { name = "{{ cookiecutter.full_name}}", email = "{{ cookiecutter.email }}"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "pytest >=6",
    "pytest-cov >=3",
]
dev = [
    "pytest >=6",
    "pre-commit >= 2",
]

[project.urls]
Documentation = "{{ cookiecutter.url }}#readme"
Issues = "{{ cookiecutter.url }}/issues"
Source = "{{ cookiecutter.url }}"

[tool.hatch.version]
path = "{{ cookiecutter.project_package }}/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
]

[tool.hatch.envs.default.scripts]
tests = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov={{ cookiecutter.project_package }} --cov=tests"
no-cov = "tests --no-cov"

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "{{ cookiecutter.project_package }}/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
files = "{{ cookiecutter.project_package }}"
python_version = "3.7"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[tool.isort]
profile = "black"
